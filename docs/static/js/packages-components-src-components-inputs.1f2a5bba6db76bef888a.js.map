{"version":3,"sources":["/Users/slava/my/expandorg/expand-components/packages/components/src/components/Dropdown/Dropdown.styl","/Users/slava/my/expandorg/expand-components/packages/components/src/components/Dropdown/DropdownBase.styl","/Users/slava/my/expandorg/expand-components/packages/components/src/components/Dropdown/Dropdown.js","webpack:///./packages/components/src/components/Dropdown/Dropdown.styl?8dc3","/Users/slava/my/expandorg/expand-components/packages/components/src/components/Dropdown/DropdownBase.js","webpack:///./packages/components/src/components/Dropdown/DropdownBase.styl?6790","/Users/slava/my/expandorg/expand-components/packages/components/src/components/inputs.mdx","/Users/slava/my/expandorg/expand-components/scripts/docz/WithState.js"],"names":["module","exports","push","i","Dropdown","className","options","value","label","nullValue","onChange","tooltip","tooltipPosition","tooltipOrientation","theme","formatter","change","useCallback","v","cn","formatted","placeholder","p","position","orientation","defaultProps","undefined","content","update","locals","hot","accept","newContent","dispose","formatItem","option","DropdownBase","children","disabled","target","classes","selectClasses","items","map","selected","find","x","key","layoutProps","MDXLayout","MDXContent","components","props","mdxType","__position","__code","__scope","this","Playground","Props","WithState","IconInput","AutocompleteInput","Pane","__codesandbox","onChangeEvent","copy","evt","onSelect","isMDXComponent","handleChange","setState","handleChangeEvent","e","state","Component"],"mappings":"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","file":"static/js/packages-components-src-components-inputs.44c4dfa6.js","sourcesContent":["exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(true);\n// Module\nexports.push([module.id, \".gem-dropdown-content {\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n  position: relative;\\n  width: 100%;\\n  height: 56px;\\n  padding: 24px 0 0 16px;\\n  font-family: 'Avenir';\\n  font-weight: 400;\\n  font-size: 16px;\\n  line-height: 22px;\\n  -webkit-transition: all 0.2s ease-out;\\n  -o-transition: all 0.2s ease-out;\\n  transition: all 0.2s ease-out;\\n}\\n.gem-dropdown-theme-default .gem-dropdown-content {\\n  border-top-left-radius: 5px;\\n  border-top-right-radius: 5px;\\n  color: #1c2541;\\n  background-color: #f3f9ff;\\n  border-bottom: 1px solid #8cbbee;\\n}\\n.gem-dropdown-theme-default .gem-dropdown-content .gem-input-label {\\n  left: 16px;\\n}\\n.gem-dropdown-theme-default .gem-dropdown-content .gem-input-label:before {\\n  color: #558098;\\n}\\n.gem-dropdown-theme-white .gem-dropdown-content {\\n  padding-left: 0;\\n  color: #fff;\\n  border-bottom: 1px solid #fff;\\n}\\n.gem-dropdown-theme-white .gem-dropdown-content .gem-input-label:before {\\n  color: #fff;\\n}\\n.gem-dropdown-theme-white .gem-dropdown-content .gem-input-tooltip path {\\n  fill: #fff;\\n}\\n.gem-dropdown-content-val {\\n  border-bottom-color: #1471eb;\\n}\\n.gem-dropdown-content-val .gem-input-label:before {\\n  font-size: 11px;\\n  font-weight: 700;\\n  -webkit-transform: translateY(-14px);\\n      -ms-transform: translateY(-14px);\\n          transform: translateY(-14px);\\n}\\n.gem-dropdown-theme-default .gem-dropdown-content-val .gem-input-label:before {\\n  color: #1471eb;\\n}\\n.gem-dropdown-theme-white .gem-dropdown-content-val .gem-input-label:before {\\n  color: #fff;\\n}\\n.gem-dropdown--tooltip .gem-dropdown-select {\\n  width: calc(100% - 40px);\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"/Users/slava/my/expandorg/expand-components/packages/components/src/components/Dropdown/packages/components/src/components/Dropdown/Dropdown.styl\",\"/Users/slava/my/expandorg/expand-components/packages/components/src/components/Dropdown/packages/uikit/font.styl\",\"/Users/slava/my/expandorg/expand-components/packages/components/src/components/Dropdown/Dropdown.styl\"],\"names\":[],\"mappings\":\"AAQA;EACE,8BAAY;UAAZ,sBAAY;EACZ,kBAAS;EAET,WAAO;EACP,YAAQ;EACR,sBAAS;ECQT,qBAAa;EAEX,gBAAa;EAEb,eAAW;EAEX,iBAAa;EDZf,qCAAY;EAAZ,gCAAY;EAAZ,6BAAY;AELd;AFNE;EAcE,2BAAwB;EACxB,4BAAyB;EACzB,cAAO;EACP,yBAAkB;EAClB,gCAAe;AELnB;AFOI;EACE,UAAM;AELZ;AFMM;EACE,cAAO;AEJf;AFnBE;EA0BE,eAAc;EACd,WAAM;EACN,6BAAe;AEJnB;AFMI;EACE,WAAM;AEJZ;AFOM;EACE,UAAM;AELd;AFOE;EACE,4BAAqB;AELzB;AFOI;EACE,eAAW;EACX,gBAAa;EACb,oCAAW;MAAX,gCAAW;UAAX,4BAAW;AELjB;AFtCE;EA8CM,cAAO;AELf;AFzCE;EAiDM,WAAM;AELd;AFQE;EACE,wBAAO;AENX\",\"file\":\"Dropdown.styl\",\"sourcesContent\":[\"@import '~@expandorg/uikit/colors';\\n@import '~@expandorg/uikit/font';\\n\\n\\ntheme(thm)\\n  .gem-dropdown-theme-{thm} &\\n    {block}\\n\\n.gem-dropdown-content\\n  box-sizing: border-box\\n  position relative\\n\\n  width: 100%\\n  height: 56px\\n  padding: 24px 0 0 16px\\n  font(body, false, false, 22px)\\n  transition: all 0.2s ease-out;\\n\\n  +theme('default')\\n    border-top-left-radius: 5px\\n    border-top-right-radius: 5px\\n    color: color-text-dark\\n    background-color: color-light-blue\\n    border-bottom: 1px solid color-heavy-blue\\n\\n    .gem-input-label\\n      left: 16px\\n      &:before\\n        color: #558098;\\n\\n  +theme('white')\\n    padding-left: 0\\n    color color-white\\n    border-bottom: 1px solid color-white\\n\\n    .gem-input-label:before\\n      color color-white\\n\\n    .gem-input-tooltip\\n      path\\n        fill: color-white\\n\\n  &-val\\n    border-bottom-color: color-primary-blue\\n\\n    .gem-input-label:before\\n      font-size: 11px\\n      font-weight: 700\\n      transform: translateY(-14px)\\n\\n      +theme('default')\\n        color: color-primary-blue\\n\\n      +theme('white')\\n        color color-white\\n\\n.gem-dropdown--tooltip\\n  .gem-dropdown-select\\n    width: calc(100% - 40px)\\n\",\"font-family-base = 'Avenir'\\n\\nfont-preset = {\\n  'h1': (300 36px 1.3),\\n\\n  'h2-title': (400 24px 1.3),\\n  'h2-bold': (500 24px 1.3),\\n\\n  'h3-title': (400 18px 1.3),\\n  'h3-bold': (800 18px 1.3),\\n\\n  'h4': (500 15px 1.3),\\n  'h4-bold': (800 15px 1.3),\\n\\n  'body': (400 16px 1.3),\\n  'body-bold': (800 16px 1.3),\\n\\n  'oversized': (300 96px 1.2),\\n\\n  'subtitle': (800 12px 16px 0.15em),\\n\\n  'small-text': (400 14px 1.3),\\n  'small-text-bold': (900 14px 1.3),\\n\\n  'navigation': (400 10px normal 0.15em),\\n\\n  'input-label': (800 11px normal),\\n}\\n\\n\\nfont-base(weight, size, line-height, letter-spacing)\\n  font-family: font-family-base\\n  if weight\\n    font-weight: weight\\n  if size\\n    font-size: size\\n  if line-height\\n    line-height: line-height\\n  if letter-spacing\\n    letter-spacing: letter-spacing\\n\\nfont(presetName, override-weight=false, override-size=false, override-line-height=false)\\n  preset = font-preset[presetName]\\n  weight = preset[0]\\n  if override-weight\\n    weight = override-weight\\n\\n  size = preset[1]\\n  if override-size\\n    size = override-size\\n\\n  line-height = preset[2]\\n  if override-line-height\\n    line-height = override-line-height\\n\\n  font-base(weight, size, line-height, preset[3])\\n\",\".gem-dropdown-content {\\n  box-sizing: border-box;\\n  position: relative;\\n  width: 100%;\\n  height: 56px;\\n  padding: 24px 0 0 16px;\\n  font-family: 'Avenir';\\n  font-weight: 400;\\n  font-size: 16px;\\n  line-height: 22px;\\n  transition: all 0.2s ease-out;\\n}\\n.gem-dropdown-theme-default .gem-dropdown-content {\\n  border-top-left-radius: 5px;\\n  border-top-right-radius: 5px;\\n  color: #1c2541;\\n  background-color: #f3f9ff;\\n  border-bottom: 1px solid #8cbbee;\\n}\\n.gem-dropdown-theme-default .gem-dropdown-content .gem-input-label {\\n  left: 16px;\\n}\\n.gem-dropdown-theme-default .gem-dropdown-content .gem-input-label:before {\\n  color: #558098;\\n}\\n.gem-dropdown-theme-white .gem-dropdown-content {\\n  padding-left: 0;\\n  color: #fff;\\n  border-bottom: 1px solid #fff;\\n}\\n.gem-dropdown-theme-white .gem-dropdown-content .gem-input-label:before {\\n  color: #fff;\\n}\\n.gem-dropdown-theme-white .gem-dropdown-content .gem-input-tooltip path {\\n  fill: #fff;\\n}\\n.gem-dropdown-content-val {\\n  border-bottom-color: #1471eb;\\n}\\n.gem-dropdown-content-val .gem-input-label:before {\\n  font-size: 11px;\\n  font-weight: 700;\\n  transform: translateY(-14px);\\n}\\n.gem-dropdown-theme-default .gem-dropdown-content-val .gem-input-label:before {\\n  color: #1471eb;\\n}\\n.gem-dropdown-theme-white .gem-dropdown-content-val .gem-input-label:before {\\n  color: #fff;\\n}\\n.gem-dropdown--tooltip .gem-dropdown-select {\\n  width: calc(100% - 40px);\\n}\\n\"]}]);\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(true);\n// Module\nexports.push([module.id, \".gem-dropdown {\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n  position: relative;\\n  cursor: pointer;\\n  width: 100%;\\n}\\n.gem-dropdown-select {\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n  width: 99%;\\n  height: 100%;\\n  border: none;\\n  cursor: pointer;\\n  background-color: transparent;\\n  z-index: 1;\\n  outline: none;\\n  -webkit-appearance: none;\\n     -moz-appearance: none;\\n          appearance: none;\\n}\\n.gem-dropdown-disabled .gem-dropdown-select {\\n  cursor: default;\\n}\\n.gem-dropdown-hidden {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  opacity: 0;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"/Users/slava/my/expandorg/expand-components/packages/components/src/components/Dropdown/packages/components/src/components/Dropdown/DropdownBase.styl\",\"/Users/slava/my/expandorg/expand-components/packages/components/src/components/Dropdown/DropdownBase.styl\"],\"names\":[],\"mappings\":\"AAGA;EACE,8BAAY;UAAZ,sBAAY;EACZ,kBAAU;EACV,eAAQ;EACR,WAAO;ACFT;ADIE;EACE,8BAAY;UAAZ,sBAAY;EAEZ,UAAO;EACP,YAAQ;EACR,YAAQ;EAER,eAAQ;EACR,6BAAkB;EAClB,UAAS;EACT,aAAS;EACT,wBAAY;KAAZ,qBAAY;UAAZ,gBAAY;ACJhB;ADOI;EACE,eAAQ;ACLd;ADOE;EACE,kBAAU;EACV,MAAK;EACL,OAAM;EACN,WAAO;EAEP,UAAS;ACNb\",\"file\":\"DropdownBase.styl\",\"sourcesContent\":[\"@import '~@expandorg/uikit/font'\\n@import '~@expandorg/uikit/colors'\\n\\n.gem-dropdown\\n  box-sizing: border-box\\n  position: relative\\n  cursor: pointer\\n  width: 100%;\\n\\n  &-select\\n    box-sizing: border-box\\n\\n    width: 99%\\n    height: 100%\\n    border: none\\n\\n    cursor: pointer\\n    background-color: transparent\\n    z-index: 1\\n    outline: none\\n    appearance: none\\n\\n  &-disabled\\n    .gem-dropdown-select\\n      cursor: default\\n\\n  &-hidden\\n    position: absolute\\n    top: 0\\n    left: 0\\n    width: 100%\\n\\n    opacity: 0\\n\",\".gem-dropdown {\\n  box-sizing: border-box;\\n  position: relative;\\n  cursor: pointer;\\n  width: 100%;\\n}\\n.gem-dropdown-select {\\n  box-sizing: border-box;\\n  width: 99%;\\n  height: 100%;\\n  border: none;\\n  cursor: pointer;\\n  background-color: transparent;\\n  z-index: 1;\\n  outline: none;\\n  appearance: none;\\n}\\n.gem-dropdown-disabled .gem-dropdown-select {\\n  cursor: default;\\n}\\n.gem-dropdown-hidden {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  opacity: 0;\\n}\\n\"]}]);\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport DropdownBase from './DropdownBase';\nimport TooltipIcon from '../common/TooltipIcon';\nimport InputLabel from '../common/InputLabel';\nimport InputIconsContainer from '../common/InputIconsContainer';\nimport ArrowDownIcon from '../common/ArrowDownIcon';\n\nimport './Dropdown.styl';\n\nexport default function Dropdown({\n  className,\n  options,\n  value,\n  label,\n  nullValue,\n  onChange,\n  tooltip,\n  tooltipPosition,\n  tooltipOrientation,\n  theme,\n  formatter,\n}) {\n  const change = useCallback(v => onChange(v), [onChange]);\n\n  return (\n    <DropdownBase\n      options={options}\n      value={value}\n      nullValue={nullValue}\n      onChange={change}\n      formatter={formatter}\n      className={cn(\n        `gem-dropdown-theme-${theme}`,\n        { 'gem-dropdown--tooltip': !!tooltip },\n        className\n      )}\n    >\n      {({ formatted }) => (\n        <div\n          className={cn('gem-dropdown-content', {\n            'gem-dropdown-content-val': formatted,\n          })}\n        >\n          <InputLabel placeholder={label} />\n          {formatted}\n          <InputIconsContainer theme={theme}>\n            <ArrowDownIcon theme={theme} />\n            {tooltip && (\n              <TooltipIcon\n                tooltip={tooltip}\n                p\n                position={tooltipPosition}\n                orientation={tooltipOrientation}\n              />\n            )}\n          </InputIconsContainer>\n        </div>\n      )}\n    </DropdownBase>\n  );\n}\n\nDropdown.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  nullValue: PropTypes.string,\n  tooltip: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n  tooltipPosition: PropTypes.string,\n  tooltipOrientation: PropTypes.string,\n  options: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n  ),\n  theme: PropTypes.oneOf(['default', 'white']),\n  label: PropTypes.string,\n  formatter: PropTypes.func,\n  onChange: PropTypes.func.isRequired,\n};\n\nDropdown.defaultProps = {\n  value: undefined,\n  className: null,\n  tooltip: null,\n  nullValue: null,\n  tooltipPosition: undefined,\n  tooltipOrientation: undefined,\n  theme: 'default',\n  options: [],\n  label: null,\n  formatter: value => value,\n};\n","var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--11-1!../../../../../node_modules/postcss-loader/src/index.js?sourceMap!../../../../../node_modules/stylus-loader/index.js?paths[]=src!./Dropdown.styl\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n\nif (module.hot) {\n  if (!content.locals) {\n    module.hot.accept(\n      \"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--11-1!../../../../../node_modules/postcss-loader/src/index.js?sourceMap!../../../../../node_modules/stylus-loader/index.js?paths[]=src!./Dropdown.styl\",\n      function () {\n        var newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--11-1!../../../../../node_modules/postcss-loader/src/index.js?sourceMap!../../../../../node_modules/stylus-loader/index.js?paths[]=src!./Dropdown.styl\");\n\n        if (typeof newContent === 'string') {\n          newContent = [[module.id, newContent, '']];\n        }\n        \n        update(newContent);\n      }\n    )\n  }\n\n  module.hot.dispose(function() { \n    update();\n  });\n}","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport './DropdownBase.styl';\n\nconst formatItem = option => {\n  if (typeof option === 'string' || typeof option === 'number') {\n    return { value: option, label: option };\n  }\n  return option;\n};\n\nexport default function DropdownBase({\n  value,\n  options,\n  className,\n  onChange,\n  children,\n  disabled,\n  nullValue,\n  formatter,\n}) {\n  const change = useCallback(({ target }) => onChange(target.value), [\n    onChange,\n  ]);\n\n  const classes = cn(\n    'gem-dropdown',\n    { 'gem-dropdown-disabled': disabled },\n    className\n  );\n\n  const selectClasses = cn('gem-dropdown-select', {\n    'gem-dropdown-hidden': !!children,\n  });\n\n  const items = options.map(formatItem);\n  const selected = items.find(x => `${x.value}` === `${value}`);\n\n  return (\n    <div className={classes}>\n      {children({\n        value,\n        formatted: formatter(selected ? selected.label : ''),\n      })}\n      <select\n        disabled={disabled}\n        className={selectClasses}\n        value={value}\n        onChange={change}\n      >\n        {nullValue && (\n          <option value=\"\" disabled>\n            {nullValue}\n          </option>\n        )}\n        {items.map(option => (\n          <option key={option.value} value={option.value}>\n            {formatter(option.label)}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n\nDropdownBase.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  nullValue: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.any).isRequired,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n  formatter: PropTypes.func,\n};\n\nDropdownBase.defaultProps = {\n  className: null,\n  nullValue: null,\n  value: '',\n  disabled: false,\n  formatter: value => value,\n};\n","var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--11-1!../../../../../node_modules/postcss-loader/src/index.js?sourceMap!../../../../../node_modules/stylus-loader/index.js?paths[]=src!./DropdownBase.styl\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n\nif (module.hot) {\n  if (!content.locals) {\n    module.hot.accept(\n      \"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--11-1!../../../../../node_modules/postcss-loader/src/index.js?sourceMap!../../../../../node_modules/stylus-loader/index.js?paths[]=src!./DropdownBase.styl\",\n      function () {\n        var newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--11-1!../../../../../node_modules/postcss-loader/src/index.js?sourceMap!../../../../../node_modules/stylus-loader/index.js?paths[]=src!./DropdownBase.styl\");\n\n        if (typeof newContent === 'string') {\n          newContent = [[module.id, newContent, '']];\n        }\n        \n        update(newContent);\n      }\n    )\n  }\n\n  module.hot.dispose(function() { \n    update();\n  });\n}","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz'\nimport WithState from 'scripts/docz/WithState'\nimport { IconInput } from './Input/IconInput.js'\nimport Dropdown from './Dropdown/Dropdown.js'\nimport AutocompleteInput from './Autocomplete/AutocompleteInput.js'\nimport Pane from './Panel/Panel.js'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"dropdown-inputs\"\n    }}>{`Dropdown-inputs`}</h2>\n\n\n\n    <Playground __position={0} __code={'() => (\\n  <Pane>\\n    <WithState>\\n      {({ value, onChangeEvent }) => (\\n        <IconInput\\n          placeholder=\\\"Enter value\\\"\\n          tooltip=\\\"test\\\"\\n          copy\\n          value={value}\\n          onChange={onChangeEvent}\\n        />\\n      )}\\n    </WithState>\\n    <br />\\n    <br />\\n    <WithState value={null}>\\n      {({ onChange, value }) => (\\n        <Dropdown\\n          value={value}\\n          nullValue=\\\"Select reason\\\"\\n          label=\\\"Select reason\\\"\\n          onChange={onChange}\\n          options={[1, 2, 3, 4]}\\n        />\\n      )}\\n    </WithState>\\n    <br />\\n    <br />\\n    <WithState>\\n      {({ value, onChange }) => (\\n        <AutocompleteInput\\n          placeholder=\\\"Type...\\\"\\n          value={value}\\n          onChange={evt => {\\n            onChange(evt.target.value)\\n          }}\\n          onSelect={onChange}\\n          options={[\\n            \\'red\\',\\n            \\'gren\\',\\n            \\'blue\\',\\n            \\'yellow\\',\\n            \\'magenta\\',\\n            \\'white\\',\\n            \\'black\\',\\n            \\'gray\\',\\n            \\'brown\\',\\n          ]}\\n        />\\n      )}\\n    </WithState>\\n    <br />\\n    <br />\\n    <WithState>\\n      {({ value, onChange }) => (\\n        <AutocompleteInput\\n          placeholder=\\\"Type...\\\"\\n          tooltip=\\\"Test\\\"\\n          value={value}\\n          onChange={evt => {\\n            onChange(evt.target.value)\\n          }}\\n          onSelect={onChange}\\n          options={[\\n            \\'red\\',\\n            \\'gren\\',\\n            \\'blue\\',\\n            \\'yellow\\',\\n            \\'magenta\\',\\n            \\'white\\',\\n            \\'black\\',\\n            \\'gray\\',\\n            \\'brown\\',\\n          ]}\\n        />\\n      )}\\n    </WithState>\\n  </Pane>\\n)'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      WithState,\n      IconInput,\n      Dropdown,\n      AutocompleteInput,\n      Pane\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => <Pane mdxType=\"Pane\">\n      <WithState mdxType=\"WithState\">\n        {({\n            value,\n            onChangeEvent\n          }) => <IconInput placeholder=\"Enter value\" tooltip=\"test\" copy value={value} onChange={onChangeEvent} mdxType=\"IconInput\" />}\n      </WithState>\n      <br />\n      <br />\n      <WithState value={null} mdxType=\"WithState\">\n        {({\n            onChange,\n            value\n          }) => <Dropdown value={value} nullValue=\"Select reason\" label=\"Select reason\" onChange={onChange} options={[1, 2, 3, 4]} mdxType=\"Dropdown\" />}\n      </WithState>\n      <br />\n      <br />\n      <WithState mdxType=\"WithState\">\n        {({\n            value,\n            onChange\n          }) => <AutocompleteInput placeholder=\"Type...\" value={value} onChange={evt => {\n            onChange(evt.target.value);\n          }} onSelect={onChange} options={['red', 'gren', 'blue', 'yellow', 'magenta', 'white', 'black', 'gray', 'brown']} mdxType=\"AutocompleteInput\" />}\n      </WithState>\n      <br />\n      <br />\n      <WithState mdxType=\"WithState\">\n        {({\n            value,\n            onChange\n          }) => <AutocompleteInput placeholder=\"Type...\" tooltip=\"Test\" value={value} onChange={evt => {\n            onChange(evt.target.value);\n          }} onSelect={onChange} options={['red', 'gren', 'blue', 'yellow', 'magenta', 'white', 'black', 'gray', 'brown']} mdxType=\"AutocompleteInput\" />}\n      </WithState>\n    </Pane>}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class WithState extends Component {\n  static propTypes = {\n    value: PropTypes.any, //eslint-disable-line\n  };\n\n  static defaultProps = {\n    value: undefined,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: props.value,\n    };\n  }\n\n  handleChange = value => {\n    this.setState({ value });\n  };\n\n  handleChangeEvent = e => {\n    this.setState({ value: e.target.value });\n  };\n\n  render() {\n    const { children } = this.props;\n    const { value } = this.state;\n\n    return children({\n      onChange: this.handleChange,\n      onChangeEvent: this.handleChangeEvent,\n      value,\n    });\n  }\n}\n"],"sourceRoot":""}