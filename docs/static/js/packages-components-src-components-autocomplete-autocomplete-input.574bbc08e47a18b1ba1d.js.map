{"version":3,"sources":["/Users/slava/my/expandorg/expand-components/packages/components/src/components/Autocomplete/AutocompleteInput.mdx","/Users/slava/my/expandorg/expand-components/scripts/docz/WithState.js"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","__position","__code","__scope","this","Playground","Props","Pane","WithState","AutocompleteInput","__codesandbox","value","onChange","placeholder","evt","target","onSelect","options","tooltip","style","backgroundColor","padding","theme","of","isMDXComponent","handleChange","setState","handleChangeEvent","e","state","children","onChangeEvent","Component","defaultProps","undefined"],"mappings":"unBAeMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,gBADR,gBAKA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,onCAAypCC,QAAS,CACnsCJ,MAAOK,KAAOA,KAAKL,MAAQA,EAC3BM,eACAC,UACAC,SACAC,cACAC,uBACCC,cAAa,YAAeV,QAAQ,eACxC,kBAAM,YAAC,IAAD,CAAMA,QAAQ,QACjB,YAAC,IAAD,CAAWA,QAAQ,cAChB,gBACGW,EADH,EACGA,MACAC,EAFH,EAEGA,SAFH,OAGO,YAAC,IAAD,CAAmBC,YAAY,UAAUF,MAAOA,EAAOC,SAAU,SAAAE,GACrEF,EAASE,EAAIC,OAAOJ,QACnBK,SAAUJ,EAAUK,QAAS,CAAC,MAAO,OAAQ,OAAQ,SAAU,UAAW,QAAS,QAAS,OAAQ,SAAUjB,QAAQ,yBAE7H,uBACA,uBACA,YAAC,IAAD,CAAWA,QAAQ,cAChB,gBACGW,EADH,EACGA,MACAC,EAFH,EAEGA,SAFH,OAGO,YAAC,IAAD,CAAmBC,YAAY,UAAUK,QAAQ,OAAOP,MAAOA,EAAOC,SAAU,SAAAE,GACpFF,EAASE,EAAIC,OAAOJ,QACnBK,SAAUJ,EAAUK,QAAS,CAAC,MAAO,OAAQ,OAAQ,SAAU,UAAW,QAAS,QAAS,OAAQ,SAAUjB,QAAQ,6BAI/H,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,koBAAypBC,QAAS,CACnsBJ,MAAOK,KAAOA,KAAKL,MAAQA,EAC3BM,eACAC,UACAC,SACAC,cACAC,uBACCC,cAAa,YAAeV,QAAQ,eACxC,kBAAM,YAAC,IAAD,CAAWA,QAAQ,cACrB,gBACGW,EADH,EACGA,MACAC,EAFH,EAEGA,SAFH,OAGO,mBAAKO,MAAO,CAChBC,gBAAiB,UACjBC,QAAS,SAET,YAAC,IAAD,CAAmBR,YAAY,UAAUF,MAAOA,EAAOW,MAAM,QAAQV,SAAU,SAAAE,GAC7EF,EAASE,EAAIC,OAAOJ,QACnBK,SAAUJ,EAAUK,QAAS,CAAC,MAAO,OAAQ,OAAQ,SAAU,UAAW,QAAS,QAAS,OAAQ,SAAUjB,QAAQ,6BAI/H,YAAC,IAAD,CAAOuB,GAAId,IAAmBT,QAAQ,W,2NAK1CH,EAAW2B,gBAAiB,G,2oBClFPhB,E,YASnB,WAAYT,GAAQ,IAAD,8BACjB,4CAAMA,KAOR0B,aAAe,SAAAd,GACb,EAAKe,SAAS,CAAEf,WATC,EAYnBgB,kBAAoB,SAAAC,GAClB,EAAKF,SAAS,CAAEf,MAAOiB,EAAEb,OAAOJ,SAVhC,EAAKkB,MAAQ,CACXlB,MAAOZ,EAAMY,OAJE,E,sEAgBT,IACAmB,EAAa1B,KAAKL,MAAlB+B,SACAnB,EAAUP,KAAKyB,MAAflB,MAER,OAAOmB,EAAS,CACdlB,SAAUR,KAAKqB,aACfM,cAAe3B,KAAKuB,kBACpBhB,c,GAhCiCqB,aAAlBxB,EAKZyB,aAAe,CACpBtB,WAAOuB,G","file":"static/js/packages-components-src-components-autocomplete-autocomplete-input.d6410182.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz'\nimport Pane from '../Panel/Panel.js'\nimport WithState from 'scripts/docz/WithState'\nimport AutocompleteInput from './AutocompleteInput.js'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"autocomplete\"\n    }}>{`Autocomplete`}</h2>\n\n\n    <Playground __position={0} __code={'() => (\\n  <Pane>\\n    <WithState>\\n      {({ value, onChange }) => (\\n        <AutocompleteInput\\n          placeholder=\\\"Type...\\\"\\n          value={value}\\n          onChange={evt => {\\n            onChange(evt.target.value)\\n          }}\\n          onSelect={onChange}\\n          options={[\\n            \\'red\\',\\n            \\'gren\\',\\n            \\'blue\\',\\n            \\'yellow\\',\\n            \\'magenta\\',\\n            \\'white\\',\\n            \\'black\\',\\n            \\'gray\\',\\n            \\'brown\\',\\n          ]}\\n        />\\n      )}\\n    </WithState>\\n    <br />\\n    <br />\\n    <WithState>\\n      {({ value, onChange }) => (\\n        <AutocompleteInput\\n          placeholder=\\\"Type...\\\"\\n          tooltip=\\\"Test\\\"\\n          value={value}\\n          onChange={evt => {\\n            onChange(evt.target.value)\\n          }}\\n          onSelect={onChange}\\n          options={[\\n            \\'red\\',\\n            \\'gren\\',\\n            \\'blue\\',\\n            \\'yellow\\',\\n            \\'magenta\\',\\n            \\'white\\',\\n            \\'black\\',\\n            \\'gray\\',\\n            \\'brown\\',\\n          ]}\\n        />\\n      )}\\n    </WithState>\\n  </Pane>\\n)'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Pane,\n      WithState,\n      AutocompleteInput\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => <Pane mdxType=\"Pane\">\n      <WithState mdxType=\"WithState\">\n        {({\n            value,\n            onChange\n          }) => <AutocompleteInput placeholder=\"Type...\" value={value} onChange={evt => {\n            onChange(evt.target.value);\n          }} onSelect={onChange} options={['red', 'gren', 'blue', 'yellow', 'magenta', 'white', 'black', 'gray', 'brown']} mdxType=\"AutocompleteInput\" />}\n      </WithState>\n      <br />\n      <br />\n      <WithState mdxType=\"WithState\">\n        {({\n            value,\n            onChange\n          }) => <AutocompleteInput placeholder=\"Type...\" tooltip=\"Test\" value={value} onChange={evt => {\n            onChange(evt.target.value);\n          }} onSelect={onChange} options={['red', 'gren', 'blue', 'yellow', 'magenta', 'white', 'black', 'gray', 'brown']} mdxType=\"AutocompleteInput\" />}\n      </WithState>\n    </Pane>}\n    </Playground>\n    <Playground __position={1} __code={'() => (\\n  <WithState>\\n    {({ value, onChange }) => (\\n      <div style={{ backgroundColor: \\'#1C2541\\', padding: \\'30px\\' }}>\\n        <AutocompleteInput\\n          placeholder=\\\"Type...\\\"\\n          value={value}\\n          theme=\\\"white\\\"\\n          onChange={evt => {\\n            onChange(evt.target.value)\\n          }}\\n          onSelect={onChange}\\n          options={[\\n            \\'red\\',\\n            \\'gren\\',\\n            \\'blue\\',\\n            \\'yellow\\',\\n            \\'magenta\\',\\n            \\'white\\',\\n            \\'black\\',\\n            \\'gray\\',\\n            \\'brown\\',\\n          ]}\\n        />\\n      </div>\\n    )}\\n  </WithState>\\n)'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Pane,\n      WithState,\n      AutocompleteInput\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => <WithState mdxType=\"WithState\">\n      {({\n          value,\n          onChange\n        }) => <div style={{\n          backgroundColor: '#1C2541',\n          padding: '30px'\n        }}>\n          <AutocompleteInput placeholder=\"Type...\" value={value} theme=\"white\" onChange={evt => {\n            onChange(evt.target.value);\n          }} onSelect={onChange} options={['red', 'gren', 'blue', 'yellow', 'magenta', 'white', 'black', 'gray', 'brown']} mdxType=\"AutocompleteInput\" />\n        </div>}\n    </WithState>}\n    </Playground>\n    <Props of={AutocompleteInput} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class WithState extends Component {\n  static propTypes = {\n    value: PropTypes.any, //eslint-disable-line\n  };\n\n  static defaultProps = {\n    value: undefined,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: props.value,\n    };\n  }\n\n  handleChange = value => {\n    this.setState({ value });\n  };\n\n  handleChangeEvent = e => {\n    this.setState({ value: e.target.value });\n  };\n\n  render() {\n    const { children } = this.props;\n    const { value } = this.state;\n\n    return children({\n      onChange: this.handleChange,\n      onChangeEvent: this.handleChangeEvent,\n      value,\n    });\n  }\n}\n"],"sourceRoot":""}