{"version":3,"sources":["/Users/slava/my/expandorg/expand-components/packages/components/src/components/Panel/Panel.styl","/Users/slava/my/expandorg/expand-components/packages/components/src/components/Dialog/Dialog.mdx","/Users/slava/my/expandorg/expand-components/packages/components/src/components/Panel/Panel.js","webpack:///./packages/components/src/components/Panel/Panel.styl?4b72","/Users/slava/my/expandorg/expand-components/scripts/docz/WithState.js"],"names":["module","exports","push","i","layoutProps","MDXLayout","MDXContent","components","props","mdxType","__position","__code","__scope","this","Playground","Props","WithState","Dialog","DF","Pane","Button","__codesandbox","value","onChange","onClick","visible","contentLabel","Container","Title","Description","Actions","of","parentName","Field","FormError","TopIcon","SuccessIcon","isMDXComponent","Panel","children","className","cn","defaultProps","content","options","update","locals","hot","accept","newContent","dispose","handleChange","setState","state","Component","undefined"],"mappings":"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","file":"static/js/packages-components-src-components-dialog-dialog.c77f3b93.js","sourcesContent":["exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(true);\n// Module\nexports.push([module.id, \".gem-panel {\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n  padding: 30px;\\n  background: #fff;\\n  -webkit-box-shadow: 0px 4px 4px #dfeeff;\\n          box-shadow: 0px 4px 4px #dfeeff;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"/Users/slava/my/expandorg/expand-components/packages/components/src/components/Panel/packages/components/src/components/Panel/Panel.styl\",\"/Users/slava/my/expandorg/expand-components/packages/components/src/components/Panel/Panel.styl\"],\"names\":[],\"mappings\":\"AAGA;EACE,8BAAY;UAAZ,sBAAY;EACZ,aAAS;EAET,gBAAY;EACZ,uCAAY;UAAZ,+BAAY;ACHd\",\"file\":\"Panel.styl\",\"sourcesContent\":[\"@import '~@expandorg/uikit/colors'\\n@import '~@expandorg/uikit/font'\\n\\n.gem-panel\\n  box-sizing: border-box\\n  padding: 30px\\n\\n  background: color-white\\n  box-shadow: light-shadow\\n\",\".gem-panel {\\n  box-sizing: border-box;\\n  padding: 30px;\\n  background: #fff;\\n  box-shadow: 0px 4px 4px #dfeeff;\\n}\\n\"]}]);\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz'\nimport WithState from 'scripts/docz/WithState'\nimport { Dialog, DialogForm as DF } from './index.js'\nimport Pane from '../Panel/Panel.js'\nimport Button from '../Button/Button.js'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"dialog\"\n    }}>{`Dialog`}</h2>\n\n\n    <Playground __position={0} __code={'() => (\\n  <WithState value={false}>\\n    {({ value, onChange }) => (\\n      <Pane>\\n        <Button onClick={() => onChange(!value)}>dialog</Button>\\n        <Dialog\\n          visible={value}\\n          contentLabel={\\'test\\'}\\n          visible={value}\\n          onHide={() => onChange(!value)}\\n        >\\n          <DF.Container>\\n            <DF.Title>Title</DF.Title>\\n            <DF.Description>Description</DF.Description>\\n            <DF.Actions>\\n              <Button onClick={() => onChange(!value)}>hide</Button>\\n            </DF.Actions>\\n          </DF.Container>\\n        </Dialog>\\n      </Pane>\\n    )}\\n  </WithState>\\n)'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      WithState,\n      Dialog,\n      DF,\n      Pane,\n      Button\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => <WithState value={false} mdxType=\"WithState\">\n      {({\n          value,\n          onChange\n        }) => <Pane mdxType=\"Pane\">\n          <Button onClick={() => onChange(!value)} mdxType=\"Button\">\n            dialog\n          </Button>\n      <Dialog visible={value} contentLabel={'test'} visible={value} onHide={() => onChange(!value)} mdxType=\"Dialog\">\n        <DF.Container>\n          <DF.Title>Title</DF.Title>\n          <DF.Description>Description</DF.Description>\n          <DF.Actions>\n            <Button onClick={() => onChange(!value)} mdxType=\"Button\">\n              hide\n            </Button>\n          </DF.Actions>\n        </DF.Container>\n      </Dialog>\n\n    </Pane>}\n      </WithState>}\n    </Playground>\n    <Props of={Dialog} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"dialog-form-elements\"\n    }}>{`Dialog Form Elements`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Dialog, DialogForm as DF } from '@expandorg/components';\n\nconst TestDialog = ({ onHide }) => (\n  <Dialog onHide={onHide} contentLabel=\"test\">\n    <DF.Container>\n      <DF.Title>Title</DF.Title>\n      <DF.Description bold>Description</DF.Description>\n      <DF.Actions>\n        <Button onClick={onHide}>\n          action\n        </Button>\n      </DF.Actions>\n    </DF.Container>\n  </Dialog>\n)\n\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"dfcontainer-\"\n    }}><inlineCode parentName=\"h3\">{`<DF.Container />`}</inlineCode></h3>\n    <Props of={DF.Container} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"dftitle-\"\n    }}><inlineCode parentName=\"h3\">{`<DF.Title />`}</inlineCode></h3>\n    <Props of={DF.Title} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"dfdescription-\"\n    }}><inlineCode parentName=\"h3\">{`<DF.Description />`}</inlineCode></h3>\n    <Props of={DF.Description} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"dffield-\"\n    }}><inlineCode parentName=\"h3\">{`<DF.Field />`}</inlineCode></h3>\n    <Props of={DF.Field} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"dfactions-\"\n    }}><inlineCode parentName=\"h3\">{`<DF.Actions />`}</inlineCode></h3>\n    <Props of={DF.Actions} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"dfformerror-\"\n    }}><inlineCode parentName=\"h3\">{`<DF.FormError />`}</inlineCode></h3>\n    <Props of={DF.FormError} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"dftopicon-\"\n    }}><inlineCode parentName=\"h3\">{`<DF.TopIcon />`}</inlineCode></h3>\n    <Props of={DF.TopIcon} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"dfformerror--1\"\n    }}><inlineCode parentName=\"h3\">{`<DF.FormError />`}</inlineCode></h3>\n    <Props of={DF.SuccessIcon} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport cn from 'classnames';\n\nimport './Panel.styl';\n\nexport default function Panel({ children, className }) {\n  return <div className={cn('gem-panel', className)}>{children}</div>;\n}\n\nPanel.propTypes = {\n  className: PropTypes.string,\n};\n\nPanel.defaultProps = {\n  className: null,\n};\n","var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--11-1!../../../../../node_modules/postcss-loader/src/index.js?sourceMap!../../../../../node_modules/stylus-loader/index.js?paths[]=src!./Panel.styl\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n\nif (module.hot) {\n  if (!content.locals) {\n    module.hot.accept(\n      \"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--11-1!../../../../../node_modules/postcss-loader/src/index.js?sourceMap!../../../../../node_modules/stylus-loader/index.js?paths[]=src!./Panel.styl\",\n      function () {\n        var newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--11-1!../../../../../node_modules/postcss-loader/src/index.js?sourceMap!../../../../../node_modules/stylus-loader/index.js?paths[]=src!./Panel.styl\");\n\n        if (typeof newContent === 'string') {\n          newContent = [[module.id, newContent, '']];\n        }\n        \n        update(newContent);\n      }\n    )\n  }\n\n  module.hot.dispose(function() { \n    update();\n  });\n}","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class WithState extends Component {\n  static propTypes = {\n    value: PropTypes.any, //eslint-disable-line\n  };\n\n  static defaultProps = {\n    value: undefined,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: props.value,\n    };\n  }\n\n  handleChange = value => {\n    this.setState({ value });\n  };\n\n  render() {\n    const { children } = this.props;\n    const { value } = this.state;\n\n    return children({ onChange: this.handleChange, value });\n  }\n}\n"],"sourceRoot":""}