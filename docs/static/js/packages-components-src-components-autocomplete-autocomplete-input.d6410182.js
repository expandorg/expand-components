(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{"./packages/components/src/components/Autocomplete/AutocompleteInput.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return i}));var a=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),o=(t("./node_modules/react/index.js"),t("./node_modules/@mdx-js/react/dist/index.es.js")),l=t("./node_modules/docz/dist/index.esm.js"),r=t("./packages/components/src/components/Panel/Panel.js"),s=t("./scripts/docz/WithState.js"),c=t("./packages/components/src/components/Autocomplete/AutocompleteInput.js"),u={},p="wrapper";function i(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)(p,Object.assign({},u,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"autocomplete"},"Autocomplete"),Object(o.b)(l.c,{__position:0,__code:"() => (\n  <Pane>\n    <WithState>\n      {({ value, onChange }) => (\n        <AutocompleteInput\n          placeholder=\"Type...\"\n          value={value}\n          onChange={evt => {\n            onChange(evt.target.value)\n          }}\n          onSelect={onChange}\n          options={[\n            'red',\n            'gren',\n            'blue',\n            'yellow',\n            'magenta',\n            'white',\n            'black',\n            'gray',\n            'brown',\n          ]}\n        />\n      )}\n    </WithState>\n    <br />\n    <br />\n    <WithState>\n      {({ value, onChange }) => (\n        <AutocompleteInput\n          placeholder=\"Type...\"\n          tooltip=\"Test\"\n          value={value}\n          onChange={evt => {\n            onChange(evt.target.value)\n          }}\n          onSelect={onChange}\n          options={[\n            'red',\n            'gren',\n            'blue',\n            'yellow',\n            'magenta',\n            'white',\n            'black',\n            'gray',\n            'brown',\n          ]}\n        />\n      )}\n    </WithState>\n  </Pane>\n)",__scope:{props:this?this.props:t,Playground:l.c,Props:l.d,Pane:r.a,WithState:s.a,AutocompleteInput:c.a},__codesandbox:"undefined",mdxType:"Playground"},(function(){return Object(o.b)(r.a,{mdxType:"Pane"},Object(o.b)(s.a,{mdxType:"WithState"},(function(e){var n=e.value,t=e.onChange;return Object(o.b)(c.a,{placeholder:"Type...",value:n,onChange:function(e){t(e.target.value)},onSelect:t,options:["red","gren","blue","yellow","magenta","white","black","gray","brown"],mdxType:"AutocompleteInput"})})),Object(o.b)("br",null),Object(o.b)("br",null),Object(o.b)(s.a,{mdxType:"WithState"},(function(e){var n=e.value,t=e.onChange;return Object(o.b)(c.a,{placeholder:"Type...",tooltip:"Test",value:n,onChange:function(e){t(e.target.value)},onSelect:t,options:["red","gren","blue","yellow","magenta","white","black","gray","brown"],mdxType:"AutocompleteInput"})})))})),Object(o.b)(l.c,{__position:1,__code:"() => (\n  <WithState>\n    {({ value, onChange }) => (\n      <div style={{ backgroundColor: '#1C2541', padding: '30px' }}>\n        <AutocompleteInput\n          placeholder=\"Type...\"\n          value={value}\n          theme=\"white\"\n          onChange={evt => {\n            onChange(evt.target.value)\n          }}\n          onSelect={onChange}\n          options={[\n            'red',\n            'gren',\n            'blue',\n            'yellow',\n            'magenta',\n            'white',\n            'black',\n            'gray',\n            'brown',\n          ]}\n        />\n      </div>\n    )}\n  </WithState>\n)",__scope:{props:this?this.props:t,Playground:l.c,Props:l.d,Pane:r.a,WithState:s.a,AutocompleteInput:c.a},__codesandbox:"undefined",mdxType:"Playground"},(function(){return Object(o.b)(s.a,{mdxType:"WithState"},(function(e){var n=e.value,t=e.onChange;return Object(o.b)("div",{style:{backgroundColor:"#1C2541",padding:"30px"}},Object(o.b)(c.a,{placeholder:"Type...",value:n,theme:"white",onChange:function(e){t(e.target.value)},onSelect:t,options:["red","gren","blue","yellow","magenta","white","black","gray","brown"],mdxType:"AutocompleteInput"}))}))})),Object(o.b)(l.d,{of:c.a,mdxType:"Props"}))}i&&i===Object(i)&&Object.isExtensible(i)&&Object.defineProperty(i,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"packages/components/src/components/Autocomplete/AutocompleteInput.mdx"}}),i.isMDXComponent=!0},"./scripts/docz/WithState.js":function(e,n,t){"use strict";t.d(n,"a",(function(){return u}));var a=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),o=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js"),l=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js"),r=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js"),s=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js"),c=t("./node_modules/react/index.js"),u=function(e){function n(e){var t;return Object(a.a)(this,n),(t=Object(l.a)(this,Object(r.a)(n).call(this,e))).handleChange=function(e){t.setState({value:e})},t.handleChangeEvent=function(e){t.setState({value:e.target.value})},t.state={value:e.value},t}return Object(s.a)(n,e),Object(o.a)(n,[{key:"render",value:function(){var e=this.props.children,n=this.state.value;return e({onChange:this.handleChange,onChangeEvent:this.handleChangeEvent,value:n})}}]),n}(c.Component);u.defaultProps={value:void 0},"undefined"!==typeof u&&u&&u===Object(u)&&Object.isExtensible(u)&&Object.defineProperty(u,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"WithState",filename:"scripts/docz/WithState.js"}}),"undefined"!==typeof u&&u&&u===Object(u)&&Object.isExtensible(u)&&Object.defineProperty(u,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"WithState",filename:"scripts/docz/WithState.js"}})}}]);
//# sourceMappingURL=packages-components-src-components-autocomplete-autocomplete-input.264c3cdedeefcb372aa5.js.map