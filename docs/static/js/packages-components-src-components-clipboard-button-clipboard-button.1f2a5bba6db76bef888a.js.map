{"version":3,"sources":["/Users/slava/my/expandorg/expand-components/packages/components/src/components/Panel/Panel.styl","/Users/slava/my/expandorg/expand-components/packages/components/src/components/ClipboardButton/ClipboardButton.js","/Users/slava/my/expandorg/expand-components/packages/components/src/components/ClipboardButton/ClipboardButton.mdx","/Users/slava/my/expandorg/expand-components/packages/components/src/components/Panel/Panel.js","webpack:///./packages/components/src/components/Panel/Panel.styl?4b72"],"names":["module","exports","push","i","ClipboardButton","buttonRef","createRef","getText","props","value","this","clipboard","ClipboardJS","current","text","destroy","children","className","ref","type","Component","defaultProps","layoutProps","MDXLayout","MDXContent","components","mdxType","__position","__code","__scope","Playground","Props","Pane","__codesandbox","of","isMDXComponent","Panel","cn","content","options","update","locals","hot","accept","newContent","dispose"],"mappings":"iRAAUA,EAAOC,QAAU,EAAQ,gDAAR,EAAsE,IAEzFC,KAAK,CAACF,EAAOG,EAAI,yNAA0N,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,2IAA2I,mGAAmG,MAAQ,GAAG,SAAW,6EAA6E,KAAO,aAAa,eAAiB,CAAC,2LAA2L,+H,+wBCG3yBC,E,2MAWnBC,UAAYC,sB,EAYZC,QAAU,WAER,OADkB,EAAKC,MAAfC,O,mFAVRC,KAAKC,UAAY,IAAIC,IAAYF,KAAKL,UAAUQ,QAAS,CACvDC,KAAMJ,KAAKH,Y,6CAKbG,KAAKC,UAAUI,Y,+BAQP,IAAD,EACyBL,KAAKF,MAA7BQ,EADD,EACCA,SAAUC,EADX,EACWA,UAClB,OACE,4BAAQC,IAAKR,KAAKL,UAAWY,UAAWA,EAAWE,KAAK,UACrDH,O,GAhCoCI,aAAxBhB,EAMZiB,aAAe,CACpBZ,MAAO,GACPQ,UAAW,M,6gCCCTK,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGjB,EACF,8BACD,OAAO,YAACe,EAAD,iBAAeD,EAAiBd,EAAhC,CAAuCiB,WAAYA,EAAYC,QAAQ,cAC5E,iBAAQ,CACN,GAAM,mBADR,mBAKA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,oGAAuGC,QAAS,CACjJrB,MAAOE,KAAOA,KAAKF,MAAQA,EAC3BsB,eACAC,UACA3B,oBACA4B,UACCC,cAAa,YAAeP,QAAQ,eACxC,kBAAM,YAAC,IAAD,CAAMA,QAAQ,QACjB,YAAC,IAAD,CAAiBjB,MAAO,UAAWiB,QAAQ,mBAA3C,eAKF,YAAC,IAAD,CAAOQ,GAAI9B,IAAiBsB,QAAQ,W,4NAKxCF,EAAWW,gBAAiB,G,mFC9C5B,kMAOe,SAASC,EAAT,GAAyC,IAAxBpB,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UACxC,OAAO,yBAAKA,UAAWoB,IAAG,YAAapB,IAAaD,G,kMAOtDoB,EAAMf,aAAe,CACnBJ,UAAW,O,wEChBb,IAAIqB,EAAU,EAAQ,uMAEC,kBAAZA,IACTA,EAAU,CAAC,CAACtC,EAAOG,EAAImC,EAAS,MAGlC,IAAIC,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAEhBC,EAAS,EAAQ,uEAAR,CAA8FF,EAASC,GAEhHD,EAAQG,SACVzC,EAAOC,QAAUqC,EAAQG,QAIpBH,EAAQG,QACXzC,EAAO0C,IAAIC,OACT,uMACA,WACE,IAAIC,EAAa,EAAQ,uMAEC,kBAAfA,IACTA,EAAa,CAAC,CAAC5C,EAAOG,EAAIyC,EAAY,MAGxCJ,EAAOI,MAKb5C,EAAO0C,IAAIG,SAAQ,WACjBL","file":"static/js/packages-components-src-components-clipboard-button-clipboard-button.e80db012.js","sourcesContent":["exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(true);\n// Module\nexports.push([module.id, \".gem-panel {\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n  padding: 30px;\\n  background: #fff;\\n  -webkit-box-shadow: 0px 4px 4px #dfeeff;\\n          box-shadow: 0px 4px 4px #dfeeff;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"/Users/slava/my/expandorg/expand-components/packages/components/src/components/Panel/packages/components/src/components/Panel/Panel.styl\",\"/Users/slava/my/expandorg/expand-components/packages/components/src/components/Panel/Panel.styl\"],\"names\":[],\"mappings\":\"AAGA;EACE,8BAAY;UAAZ,sBAAY;EACZ,aAAS;EAET,gBAAY;EACZ,uCAAY;UAAZ,+BAAY;ACHd\",\"file\":\"Panel.styl\",\"sourcesContent\":[\"@import '~@expandorg/uikit/colors'\\n@import '~@expandorg/uikit/font'\\n\\n.gem-panel\\n  box-sizing: border-box\\n  padding: 30px\\n\\n  background: color-white\\n  box-shadow: light-shadow\\n\",\".gem-panel {\\n  box-sizing: border-box;\\n  padding: 30px;\\n  background: #fff;\\n  box-shadow: 0px 4px 4px #dfeeff;\\n}\\n\"]}]);\n","import React, { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ClipboardJS from 'clipboard';\n\nexport default class ClipboardButton extends Component {\n  static propTypes = {\n    value: PropTypes.string,\n    className: PropTypes.string,\n  };\n\n  static defaultProps = {\n    value: '',\n    className: null,\n  };\n\n  buttonRef = createRef();\n\n  componentDidMount() {\n    this.clipboard = new ClipboardJS(this.buttonRef.current, {\n      text: this.getText,\n    });\n  }\n\n  componentWillUnmount() {\n    this.clipboard.destroy();\n  }\n\n  getText = () => {\n    const { value } = this.props;\n    return value;\n  };\n\n  render() {\n    const { children, className } = this.props;\n    return (\n      <button ref={this.buttonRef} className={className} type=\"button\">\n        {children}\n      </button>\n    );\n  }\n}\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz'\nimport ClipboardButton from './ClipboardButton.js'\nimport Pane from '../Panel/Panel.js'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"clipboardbutton\"\n    }}>{`ClipboardButton`}</h2>\n\n\n    <Playground __position={0} __code={'() => (\\n  <Pane>\\n    <ClipboardButton value={\\'copy me\\'}>Copy me</ClipboardButton>\\n  </Pane>\\n)'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      ClipboardButton,\n      Pane\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  {() => <Pane mdxType=\"Pane\">\n      <ClipboardButton value={'copy me'} mdxType=\"ClipboardButton\">\n        Copy me\n      </ClipboardButton>\n    </Pane>}\n    </Playground>\n    <Props of={ClipboardButton} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport cn from 'classnames';\n\nimport './Panel.styl';\n\nexport default function Panel({ children, className }) {\n  return <div className={cn('gem-panel', className)}>{children}</div>;\n}\n\nPanel.propTypes = {\n  className: PropTypes.string,\n};\n\nPanel.defaultProps = {\n  className: null,\n};\n","var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--11-1!../../../../../node_modules/postcss-loader/src/index.js?sourceMap!../../../../../node_modules/stylus-loader/index.js?paths[]=src!./Panel.styl\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n\nif (module.hot) {\n  if (!content.locals) {\n    module.hot.accept(\n      \"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--11-1!../../../../../node_modules/postcss-loader/src/index.js?sourceMap!../../../../../node_modules/stylus-loader/index.js?paths[]=src!./Panel.styl\",\n      function () {\n        var newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--11-1!../../../../../node_modules/postcss-loader/src/index.js?sourceMap!../../../../../node_modules/stylus-loader/index.js?paths[]=src!./Panel.styl\");\n\n        if (typeof newContent === 'string') {\n          newContent = [[module.id, newContent, '']];\n        }\n        \n        update(newContent);\n      }\n    )\n  }\n\n  module.hot.dispose(function() { \n    update();\n  });\n}"],"sourceRoot":""}