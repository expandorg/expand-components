{"version":3,"sources":["/Users/slava/my/expandorg/expand-components/packages/modules/src/modules/Conditional/Conditional.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_slava_my_expandorg_expand_components_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","_form_components_Playground_ModulesPlayground_js__WEBPACK_IMPORTED_MODULE_3__","isModulePreview","form","modules","type","name","style","align","content","label","placeholder","inputType","logic","show","hide","isMDXComponent"],"mappings":"6dAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,kCADR,mCAGAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,WADR,WAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,iBADZ,mPAkBLP,OAAAE,EAAA,EAAAF,CAACQ,EAAA,EAAD,CAAmBC,iBAAiB,EAAOC,KAAM,CAC/CC,QAAS,CAAC,CACRC,KAAM,OACNC,KAAM,KACNC,MAAO,KACPC,MAAO,SACPC,QAAS,0BACR,CACDH,KAAM,WACND,KAAM,WACNK,MAAO,2BACN,CACDJ,KAAM,QACND,KAAM,QACNM,YAAa,iBACbC,UAAW,OACXC,MAAO,CACLC,KAAM,CAAC,cAAe,KAAM,UAE7B,CACDR,KAAM,YACND,KAAM,WACNK,MAAO,2BACN,CACDJ,KAAM,UACND,KAAM,QACNM,YAAa,iBACbC,UAAW,OACXC,MAAO,CACLE,KAAM,CAAC,eAAgB,KAAM,YAGhClB,QAAQ,qOAIfR,EAAW2B,gBAAiB","file":"static/js/packages-modules-src-modules-conditional-conditional.451354d7.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport ModulesPlayground from '../../form/components/Playground/ModulesPlayground.js'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"showhide-modules-conditionally\"\n    }}>{`Show/Hide modules conditionally`}</h2>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`{\n  name: \"checkbox\",\n  type: \"checkbox\",\n  label: \"select me\",\n},\n{\n  name: \"input\",\n  type: \"input\",\n  placeholder: 'type something',\n  inputType: 'text',\n  logic: {\n    show: ['$(checkbox)', '==', 'true']\n  }\n}\n`}</code></pre>\n\n    <ModulesPlayground isModulePreview={false} form={{\n      modules: [{\n        type: 'text',\n        name: 'p3',\n        style: 'h2',\n        align: 'center',\n        content: 'Controlled conditional'\n      }, {\n        name: \"checkbox\",\n        type: \"checkbox\",\n        label: \"select me to show input\"\n      }, {\n        name: \"input\",\n        type: \"input\",\n        placeholder: 'type something',\n        inputType: 'text',\n        logic: {\n          show: ['$(checkbox)', '==', 'true']\n        }\n      }, {\n        name: \"checkbox2\",\n        type: \"checkbox\",\n        label: \"select me to hide input\"\n      }, {\n        name: \"input-2\",\n        type: \"input\",\n        placeholder: 'type something',\n        inputType: 'text',\n        logic: {\n          hide: ['$(checkbox2)', '==', 'true']\n        }\n      }]\n    }} mdxType=\"ModulesPlayground\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}